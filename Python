<!DOCTYPE html>
<html>
<head>
    <title>AI Interview Practice</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
        .chat { border: 1px solid #ccc; height: 400px; overflow-y: scroll; padding: 10px; margin: 20px 0; }
        .message { margin: 10px 0; padding: 10px; border-radius: 5px; }
        .interviewer { background-color: #f0f0f0; }
        .candidate { background-color: #e3f2fd; }
        input[type="text"] { width: 70%; padding: 10px; }
        button { padding: 10px 20px; background-color: #2196F3; color: white; border: none; cursor: pointer; }
    </style>
</head>
<body>
    <h1>ðŸŽ¯ AI Interview Practice</h1>
    
    <div>
        <h3>Setup:</h3>
        <textarea id="jobDescription" placeholder="Paste job description here..." style="width: 100%; height: 100px;"></textarea>
        <textarea id="resume" placeholder="Paste your resume here..." style="width: 100%; height: 100px;"></textarea>
        <button onclick="startInterview()">Start Interview</button>
    </div>
    
    <div id="chat" class="chat"></div>
    
    <div>
        <input type="text" id="userInput" placeholder="Type your answer here..." onkeypress="if(event.key==='Enter')sendMessage()">
        <button onclick="sendMessage()">Send</button>
    </div>

    <script>
        const API_KEY = "your_openrouter_api_key_here";
        const MODEL = "deepseek/deepseek-r1:free";
        let conversationHistory = [];

        async function startInterview() {
            const jobDescription = document.getElementById('jobDescription').value;
            const resume = document.getElementById('resume').value;
            
            const systemPrompt = `You are conducting a job interview based on this job description: ${jobDescription} and candidate resume: ${resume}. Ask relevant questions and provide feedback.`;
            
            conversationHistory = [
                {"role": "system", "content": systemPrompt}
            ];
            
            const response = await getAIResponse("Start the interview with your first question.");
            addMessageToChat("Interviewer", response, "interviewer");
        }

        async function sendMessage() {
            const userInput = document.getElementById('userInput').value;
            if (!userInput.trim()) return;
            
            addMessageToChat("You", userInput, "candidate");
            document.getElementById('userInput').value = '';
            
            const response = await getAIResponse(userInput);
            addMessageToChat("Interviewer", response, "interviewer");
        }

        async function getAIResponse(message) {
            conversationHistory.push({"role": "user", "content": message});
            
            try {
                const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
                    method: "POST",
                    headers: {
                        "Authorization": `Bearer ${API_KEY}`,
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        model: MODEL,
                        messages: conversationHistory,
                        temperature: 0.7,
                        max_tokens: 400
                    })
                });
                
                const data = await response.json();
                const aiResponse = data.choices.message.content;
                
                conversationHistory.push({"role": "assistant", "content": aiResponse});
                return aiResponse;
            } catch (error) {
                return "Sorry, there was an error. Please try again.";
            }
        }

        function addMessageToChat(sender, message, className) {
            const chat = document.getElementById('chat');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${className}`;
            messageDiv.innerHTML = `<strong>${sender}:</strong> ${message}`;
            chat.appendChild(messageDiv);
            chat.scrollTop = chat.scrollTop;
        }
    </script>
</body>
</html>


